name: 🚀 Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: 🚀 Deploy Application
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0

      - name: ✅ Checkout Code
        uses: actions/checkout@v4

      - name: 📂 Sync Files via SSH
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "./"
          target: "/home/ubuntu/zap"
          strip_components: 1

      - name: 🚀 Run Deploy Script on VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/ubuntu/zap/backend/DOCKER
            
            # Stop containers
            sudo docker compose down
            
            # Create directories
            mkdir -p ssl certbot/www certbot/conf
            
            # Make scripts executable
            chmod +x init-letsencrypt.sh renew-cert.sh
            
            # Generate SSL certificates BEFORE starting nginx
            ./init-letsencrypt.sh
            
            # Verify certificates exist
            if [ ! -f "ssl/fullchain.pem" ] || [ ! -f "ssl/privkey.pem" ]; then
              echo "❌ SSL certificates not found, creating emergency certificates..."
              openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                -keyout ssl/privkey.pem \
                -out ssl/fullchain.pem \
                -subj "/C=BR/ST=SP/L=SP/O=ZAPI/CN=zippy-zap.duckdns.org"
            fi
            
            # Start all services
            sudo docker compose up -d --build
            
            # Try to get Let's Encrypt certificate
            sudo docker compose run --rm certbot || echo "Let's Encrypt failed, using self-signed"
            
            # Cleanup
            sudo docker image prune -f
            
            echo "✅ Deploy complete!"
            echo "🌐 Site: https://zippy-zap.duckdns.org"